AWSTemplateFormatVersion: '2010-09-09'
Description: KT template that creates an S3 bucket configured for hosting a static website, and a Route 53 DNS record pointing to the bucket, and CloudFront distribution
  
Parameters:

  VpcStackName:
    Type: String
    Description: Name of VPC stack to build off of
    Default: kt-vpc
    
  FullDomainName:
    Type: String
    Description: The full domain name e.g. tb.king-transports.com
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
    
Resources:

  CertificateManager:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref 'FullDomainName'
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref 'FullDomainName'
          HostedZoneId: {'Fn::ImportValue': !Sub '${VpcStackName}-hosted-zone-id'}
    
  Cloudfront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !GetAtt S3.DomainName
          Id: S3Origin
          S3OriginConfig:
            OriginAccessIdentity: !Join ['', ['origin-access-identity/cloudfront/', !Ref CloudfrontOAI]]
        HttpVersion: 'http2'
        Enabled: 'true'
        Comment: KT CloudFront Distribution
        DefaultRootObject: index.html
        Aliases:
        - !Ref 'FullDomainName'
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateManager
          SslSupportMethod: sni-only
        CustomErrorResponses:
           -
              ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: "/index.html"
           -
              ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: "/index.html"
                
          
  CloudfrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "kt-acces-identity"
    
  S3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref 'FullDomainName'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
 
  S3Policy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket:
        Ref: S3
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt: [ CloudfrontOAI , S3CanonicalUserId ]
            Action: "s3:GetObject"
            Resource: !Sub "${S3.Arn}/*" 
          
  Route53:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: {'Fn::ImportValue': !Sub '${VpcStackName}-hosted-zone-id'}
      Comment: KT record set group for cloudfront frontend application
      RecordSets:
      - Name: !Sub '${FullDomainName}.'
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt Cloudfront.DomainName
      - Name:  !Sub '${FullDomainName}.'
        Type: AAAA
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt Cloudfront.DomainName