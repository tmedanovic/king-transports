AWSTemplateFormatVersion: "2010-09-09"
Description: KT Postgre RDS template

Parameters:

  VpcStack:
    Type: String
    Description: Name of VPC stack to build off of
    Default: kt-vpc
    
  EcsClusterStack:
    Type: String
    Description: Name of ECS Cluster stack to build off of
    Default: kt-ecs-cluster
    
Resources:

    KtDbSecurityGroup:
      Type: 'AWS::EC2::SecurityGroup'
      Properties:
        GroupName: "kt-db-sg"
        GroupDescription: "KT RDS security group"
        VpcId: {'Fn::ImportValue': !Sub '${VpcStack}-vpc-id'}
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: {'Fn::ImportValue': !Sub '${EcsClusterStack}-default-security-group'}

    KtDbSubnetGroup:
      Type: 'AWS::RDS::DBSubnetGroup'
      Properties:
        DBSubnetGroupDescription: !Ref 'AWS::StackName'
        SubnetIds:
          -
            Fn::ImportValue: !Sub ${VpcStack}-private-subnet-a-id
          -
            Fn::ImportValue: !Sub ${VpcStack}-private-subnet-b-id
   
    KtDbSecret:
      Type: 'AWS::SecretsManager::Secret'
      Properties:
        Name: "kt-db-secret"
        Description: KT RDS username and password
        GenerateSecretString:
          SecretStringTemplate: '{"username": "postgresking"}'
          GenerateStringKey: password
          PasswordLength: 32
          ExcludeCharacters: '"@/\'
        
    KtDbInstance:
        Type: "AWS::RDS::DBInstance"
        DependsOn: KtDbSecret
        Properties:
            DBInstanceIdentifier: "kt-pg-rds"
            AllocatedStorage: 20
            DBInstanceClass: "db.t3.micro"
            Engine: "postgres"
            DBName: "postgresking"
            MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref KtDbSecret, ':SecretString:username}}' ]]
            MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref KtDbSecret, ':SecretString:password}}' ]]
            PreferredBackupWindow: "03:34-04:04"
            BackupRetentionPeriod: 1
            AvailabilityZone: !Sub "${AWS::Region}b"
            PreferredMaintenanceWindow: "sat:05:58-sat:06:28"
            MultiAZ: false
            EngineVersion: "16.1"
            AutoMinorVersionUpgrade: true
            LicenseModel: "postgresql-license"
            PubliclyAccessible: false
            StorageType: "gp2"
            Port: 5432
            CopyTagsToSnapshot: true
            MonitoringInterval: 0
            EnableIAMDatabaseAuthentication: false
            EnablePerformanceInsights: false
            DeletionProtection: false
            DBSubnetGroupName: !Ref KtDbSubnetGroup
            VPCSecurityGroups:
            - !Ref KtDbSecurityGroup
            MaxAllocatedStorage: 1000
            DBParameterGroupName: "default.postgres16"
            OptionGroupName: "default:postgres-16"

Outputs:

  KtDbAddressExport:
    Description: A reference to the created RDS instance address
    Value: !GetAtt KtDbInstance.Endpoint.Address
    Export:
      Name: !Sub ${EcsClusterStack}-pg-rds-address
      
  KtDbPortExport:
    Description: A reference to the created RDS instance port
    Value: !GetAtt KtDbInstance.Endpoint.Port
    Export:
      Name: !Sub ${EcsClusterStack}-pg-rds-port
      
  KtDbSecretNameExport:
    Description: A reference to the created RDS instance secret (username/password)
    Value: !Ref KtDbSecret
    Export:
      Name: !Sub ${EcsClusterStack}-pg-rds-secret-name